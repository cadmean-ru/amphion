// Objective-C API for talking to github.com/cadmean-ru/amphion/frontend/cli Go package.
//   gobind -lang=objc github.com/cadmean-ru/amphion/frontend/cli
//
// File is generated by gobind. Do not edit.

#ifndef __Cli_H__
#define __Cli_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"

#include "Dispatch.objc.h"

@class CliContext;
@class CliExecDelegate;
@class CliFrontendWrap;
@class CliGeometryPrimitiveData;
@class CliImagePrimitiveData;
@class CliNativeFeatureDelegateWrap;
@class CliPrimitiveRendererDelegateWrap;
@class CliPrimitiveRenderingContext;
@class CliResourceManagerImpl;
@class CliTextPrimitiveData;
@class CliVector2;
@class CliVector3;
@class CliVector4;
@protocol CliFrontendDelegate;
@class CliFrontendDelegate;
@protocol CliNativeFeatureDelegate;
@class CliNativeFeatureDelegate;
@protocol CliPrimitiveRendererDelegate;
@class CliPrimitiveRendererDelegate;
@protocol CliRendererDelegate;
@class CliRendererDelegate;
@protocol CliResourceManagerDelegate;
@class CliResourceManagerDelegate;

@protocol CliFrontendDelegate <NSObject>
- (void)commencePanic:(NSString* _Nullable)reason msg:(NSString* _Nullable)msg;
- (NSData* _Nullable)getAppData;
- (CliContext* _Nullable)getContext;
- (id<DispatchWorkDispatcher> _Nullable)getMainThreadDispatcher;
- (id<DispatchWorkDispatcher> _Nullable)getRenderingThreadDispatcher;
- (void)init_;
- (void)run;
- (void)setCallbackDispatcher:(id<DispatchMessageDispatcher> _Nullable)dispatcher;
@end

@protocol CliNativeFeatureDelegate <NSObject>
- (NSString* _Nonnull)onInvoke:(NSString* _Nullable)p0;
@end

@protocol CliPrimitiveRendererDelegate <NSObject>
- (void)onRemovePrimitive:(CliPrimitiveRenderingContext* _Nullable)ctx;
- (void)onRender:(CliPrimitiveRenderingContext* _Nullable)ctx;
- (void)onSetPrimitive:(CliPrimitiveRenderingContext* _Nullable)ctx;
- (void)onStart;
- (void)onStop;
@end

@protocol CliRendererDelegate <NSObject>
- (void)onClear;
- (void)onPerformRenderingEnd;
- (void)onPerformRenderingStart;
- (void)onPrepare;
- (void)onStop;
@end

@protocol CliResourceManagerDelegate <NSObject>
- (NSData* _Nullable)readFile:(NSString* _Nullable)path error:(NSError* _Nullable* _Nullable)error;
@end

@interface CliContext : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) CliVector3* _Nullable screenSize;
@end

@interface CliExecDelegate : NSObject <goSeqRefInterface, DispatchWorkItem> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
// skipped constructor ExecDelegate.NewExecDelegate with unsupported parameter or return types

- (void)execute;
@end

@interface CliFrontendWrap : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@end

@interface CliGeometryPrimitiveData : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long geometryType;
@property (nonatomic) CliVector3* _Nullable tlPositionN;
@property (nonatomic) CliVector3* _Nullable brPositionN;
@property (nonatomic) CliVector4* _Nullable fillColorN;
@property (nonatomic) CliVector4* _Nullable strokeColorN;
@property (nonatomic) long strokeWeight;
@property (nonatomic) long cornerRadius;
@end

@interface CliImagePrimitiveData : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) CliVector3* _Nullable tlPositionN;
@property (nonatomic) CliVector3* _Nullable brPositionN;
@property (nonatomic) NSString* _Nonnull imageUrl;
@end

/**
 * NativeFeatureDelegateWrap is a wrap around NativeFeatureDelegate implementing the frontend.FeatureDelegate,
so native feature can be passed to the engine.
 */
@interface CliNativeFeatureDelegateWrap : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewNativeFeatureDelegateWrap creates a new instance of the NativeFeatureDelegateWrap with the specified NativeFeatureDelegate.
 */
- (nullable instancetype)init:(id<CliNativeFeatureDelegate> _Nullable)delegate;
// skipped method NativeFeatureDelegateWrap.OnInvoke with unsupported parameter or return types

@end

@interface CliPrimitiveRendererDelegateWrap : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(id<CliPrimitiveRendererDelegate> _Nullable)delegate;
// skipped method PrimitiveRendererDelegateWrap.OnRemovePrimitive with unsupported parameter or return types

// skipped method PrimitiveRendererDelegateWrap.OnRender with unsupported parameter or return types

// skipped method PrimitiveRendererDelegateWrap.OnSetPrimitive with unsupported parameter or return types

- (void)onStart;
- (void)onStop;
@end

@interface CliPrimitiveRenderingContext : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) CliGeometryPrimitiveData* _Nullable geometryPrimitiveData;
@property (nonatomic) CliImagePrimitiveData* _Nullable imagePrimitiveData;
@property (nonatomic) CliTextPrimitiveData* _Nullable textPrimitiveData;
@property (nonatomic) long primitiveKind;
// skipped field PrimitiveRenderingContext.State with unsupported type: interface{}

@property (nonatomic) BOOL redraw;
@property (nonatomic) long primitiveId;
@end

@interface CliResourceManagerImpl : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(id<CliResourceManagerDelegate> _Nullable)delegate;
// skipped field ResourceManagerImpl.ResourceManagerImpl with unsupported type: *github.com/cadmean-ru/amphion/frontend.ResourceManagerImpl

// skipped method ResourceManagerImpl.FullPathOf with unsupported parameter or return types

// skipped method ResourceManagerImpl.IdOf with unsupported parameter or return types

// skipped method ResourceManagerImpl.PathOf with unsupported parameter or return types

// skipped method ResourceManagerImpl.ReadFile with unsupported parameter or return types

- (void)registerResource:(NSString* _Nullable)path;
@end

@interface CliTextPrimitiveData : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull text;
@property (nonatomic) CliVector3* _Nullable tlPosition;
@property (nonatomic) CliVector3* _Nullable size;
@property (nonatomic) CliVector4* _Nullable textColorN;
@end

@interface CliVector2 : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(float)x y:(float)y;
@property (nonatomic) float x;
@property (nonatomic) float y;
@end

@interface CliVector3 : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(float)x y:(float)y z:(float)z;
// skipped constructor Vector3.NewVector3FromAVector3 with unsupported parameter or return types

@property (nonatomic) float x;
@property (nonatomic) float y;
@property (nonatomic) float z;
@end

@interface CliVector4 : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nullable instancetype)init:(float)x y:(float)y z:(float)z w:(float)w;
// skipped constructor Vector4.NewVector4FromAVector4 with unsupported parameter or return types

@property (nonatomic) float x;
@property (nonatomic) float y;
@property (nonatomic) float z;
@property (nonatomic) float w;
@end

FOUNDATION_EXPORT const long CliPrimitiveBezier;
FOUNDATION_EXPORT const long CliPrimitiveEllipse;
FOUNDATION_EXPORT const long CliPrimitiveEmpty;
FOUNDATION_EXPORT const long CliPrimitiveGlyph;
FOUNDATION_EXPORT const long CliPrimitiveImage;
FOUNDATION_EXPORT const long CliPrimitiveLine;
FOUNDATION_EXPORT const long CliPrimitivePoint;
FOUNDATION_EXPORT const long CliPrimitiveRectangle;
FOUNDATION_EXPORT const long CliPrimitiveText;
FOUNDATION_EXPORT const long CliPrimitiveTriangle;

// skipped function NewExecDelegate with unsupported parameter or return types


/**
 * NewNativeFeatureDelegateWrap creates a new instance of the NativeFeatureDelegateWrap with the specified NativeFeatureDelegate.
 */
FOUNDATION_EXPORT CliNativeFeatureDelegateWrap* _Nullable CliNewNativeFeatureDelegateWrap(id<CliNativeFeatureDelegate> _Nullable delegate);

FOUNDATION_EXPORT CliPrimitiveRendererDelegateWrap* _Nullable CliNewPrimitiveRendererDelegateWrap(id<CliPrimitiveRendererDelegate> _Nullable delegate);

FOUNDATION_EXPORT CliResourceManagerImpl* _Nullable CliNewResourceManagerImpl(id<CliResourceManagerDelegate> _Nullable delegate);

FOUNDATION_EXPORT CliVector2* _Nullable CliNewVector2(float x, float y);

FOUNDATION_EXPORT CliVector3* _Nullable CliNewVector3(float x, float y, float z);

// skipped function NewVector3FromAVector3 with unsupported parameter or return types


FOUNDATION_EXPORT CliVector4* _Nullable CliNewVector4(float x, float y, float z, float w);

// skipped function NewVector4FromAVector4 with unsupported parameter or return types


FOUNDATION_EXPORT CliVector3* _Nullable CliVector3Ndc(CliVector3* _Nullable v, CliVector3* _Nullable size);

@class CliFrontendDelegate;

@class CliNativeFeatureDelegate;

@class CliPrimitiveRendererDelegate;

@class CliRendererDelegate;

@class CliResourceManagerDelegate;

@interface CliFrontendDelegate : NSObject <goSeqRefInterface, CliFrontendDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)commencePanic:(NSString* _Nullable)reason msg:(NSString* _Nullable)msg;
- (NSData* _Nullable)getAppData;
- (CliContext* _Nullable)getContext;
- (id<DispatchWorkDispatcher> _Nullable)getMainThreadDispatcher;
- (id<DispatchWorkDispatcher> _Nullable)getRenderingThreadDispatcher;
- (void)init_;
- (void)run;
- (void)setCallbackDispatcher:(id<DispatchMessageDispatcher> _Nullable)dispatcher;
@end

/**
 * NativeFeatureDelegate is a redeclaration of frontend.FeatureDelegate to be exported into the CLI.
Can be used to implement a feature in native code.
The OnInvoke method takes in and returns string instead of interface{} (unlike the original interface)
due to the gobind type restrictions.
 */
@interface CliNativeFeatureDelegate : NSObject <goSeqRefInterface, CliNativeFeatureDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSString* _Nonnull)onInvoke:(NSString* _Nullable)p0;
@end

@interface CliPrimitiveRendererDelegate : NSObject <goSeqRefInterface, CliPrimitiveRendererDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onRemovePrimitive:(CliPrimitiveRenderingContext* _Nullable)ctx;
- (void)onRender:(CliPrimitiveRenderingContext* _Nullable)ctx;
- (void)onSetPrimitive:(CliPrimitiveRenderingContext* _Nullable)ctx;
- (void)onStart;
- (void)onStop;
@end

@interface CliRendererDelegate : NSObject <goSeqRefInterface, CliRendererDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)onClear;
- (void)onPerformRenderingEnd;
- (void)onPerformRenderingStart;
- (void)onPrepare;
- (void)onStop;
@end

@interface CliResourceManagerDelegate : NSObject <goSeqRefInterface, CliResourceManagerDelegate> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (NSData* _Nullable)readFile:(NSString* _Nullable)path error:(NSError* _Nullable* _Nullable)error;
@end

#endif
